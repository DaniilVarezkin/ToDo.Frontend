@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<MudNavMenu Class="px-2" Rounded="true">

    <!-- Блок авторизации -->
    <AuthorizeView>
        <Authorized Context="authState">
            <MudNavLink  Icon="@Icons.Material.Filled.AccountCircle">
                @authState.User.FindFirst(c => c.Type == "email")?.Value
            </MudNavLink>
            <MudNavGroup Title="Задачи" Icon="@Icons.Material.Filled.List" Expanded="true" >
                <MudNavLink Href="tasks"
                            Match="NavLinkMatch.All">
                    Список задач
                </MudNavLink>
                <MudNavLink Href="tasks/calendar"
                            Match="NavLinkMatch.All">
                    Календарь
                </MudNavLink>

                <MudNavLink Href="tasks/form"
                            Match="NavLinkMatch.All">
                    Новая задача
                </MudNavLink>
            </MudNavGroup>
            <MudNavLink Href="statistics"
                        Icon="@Icons.Material.Filled.Dashboard"
                        Match="NavLinkMatch.All">
                Статистика
            </MudNavLink>
            <MudNavLink OnClick="@Logout"
                        Icon="@Icons.Material.Filled.ExitToApp"
                        DisableRipple="true">
                Выйти
            </MudNavLink>
        </Authorized>
        <NotAuthorized>                     
            <MudNavLink Href="login"
                        Match="NavLinkMatch.All">
                Войти
            </MudNavLink>
            <MudNavLink Href="register"
                        Match="NavLinkMatch.All">
                Регистрация
            </MudNavLink>
        </NotAuthorized>
    </AuthorizeView>

    <MudDivider Class="my-2" />

</MudNavMenu>

@code {
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        if (AuthStateProvider is CustomAuthStateProvider custom)
            custom.NotifyTokenChanged(null);

        Nav.NavigateTo("login", forceLoad: true);
    }
}
