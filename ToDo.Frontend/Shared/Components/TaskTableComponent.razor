@using System
@using System.Collections.Generic
@using System.Threading
@using System.Threading.Tasks
@using MudBlazor
@using ToDo.Shared.Dto.TaskItems
@using ToDo.Shared.Enums

@* Configurable TaskTableComponent с навигацией по клику на строку *@
<MudTable T="TaskItemLookupDto"
          @ref="_table"
          ServerData="ServerData"
          Dense="true"
          Hover="true"
          RowClass="cursor-pointer"
          OnRowClick="RowClickEvent"
          Loading="false"
          LoadingProgressColor="Color.Transparent"
          RowsPerPage="10">
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel T="TaskItemLookupDto" SortLabel="StartDate">Когда</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TaskItemLookupDto" SortLabel="Title">Задача</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TaskItemLookupDto" SortLabel="Status">Статус</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TaskItemLookupDto" SortLabel="Priority">Приоритет</MudTableSortLabel>
        </MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>

    <RowTemplate Context="task">
        <MudTd DataLabel="Когда">
            @(task.IsAllDay ? "Весь день" : task.StartDate.LocalDateTime.ToString("HH:mm"))
        </MudTd>
        <MudTd DataLabel="Задача">
            @task.Title
        </MudTd>
        <MudTd DataLabel="Статус">
            <MudChip T="string"
                     Color="@task.Status.GetStatusMudColor()"
                     Size="Size.Small"
                     Variant="Variant.Text">
                @task.Status
            </MudChip>
        </MudTd>
        <MudTd DataLabel="Приоритет">
            <MudChip T="string"
                     Color="@task.Priority.GetPriorityMudColor()"
                     Size="Size.Small"
                     Variant="Variant.Text">
                @task.Priority
            </MudChip>
        </MudTd>
        @if (ShowActionsColumn)
        {
            <MudTd DataLabel="Действие">
                @if (task.Status != UserTaskStatus.Done)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.CheckCircle"
                                   Color="Color.Success"
                                   Size="Size.Small"
                                   OnClick="() => OnComplete.InvokeAsync(task.Id)" />
                }
                else
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Undo"
                                   Color="Color.Info"
                                   Size="Size.Small"
                                   OnClick="() => OnReopen.InvokeAsync(task.Id)" />
                }
            </MudTd>
            <MudTd DataLabel="Удалить">
                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                               Color="Color.Error"
                               Size="Size.Small"
                               OnClick="() => OnDelete.InvokeAsync(task.Id)" />
            </MudTd>
        }
    </RowTemplate>

    <PagerContent>
        @if (!HidePagination)
        {
            <MudTablePager HideRowsPerPage="true"
                           HorizontalAlignment="HorizontalAlignment.Center" />
        }
    </PagerContent>
</MudTable>

@code {
    private MudTable<TaskItemLookupDto>? _table;

    [Parameter] public bool HidePagination { get; set; } = false;
    [Parameter] public Func<TableState, CancellationToken, Task<TableData<TaskItemLookupDto>>>? ServerData { get; set; }
    [Parameter] public bool ShowActionsColumn { get; set; } = false;
    [Parameter] public EventCallback<Guid> OnComplete { get; set; }
    [Parameter] public EventCallback<Guid> OnReopen { get; set; }
    [Parameter] public EventCallback<Guid> OnDelete { get; set; }

    [Inject] private NavigationManager Nav { get; set; } = default!;

    /// <summary>Перезагрузить данные в таблице</summary>
    public Task ReloadServerDataAsync() =>
        _table is not null
            ? _table.ReloadServerData()
            : Task.CompletedTask;

    private void RowClickEvent(TableRowClickEventArgs<TaskItemLookupDto> args)
    {
        Nav.NavigateTo($"/tasks/form/{args.Item.Id}");
    }
}
