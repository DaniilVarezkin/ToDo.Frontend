@using ToDo.Shared.Dto.TaskItems
@inject NavigationManager Nav

<td class="calendar-cell @(InMonth ? "" : "out-month") @(IsToday ? "today-cell" : "")"
    style="vertical-align:top; padding:8px; height:140px; cursor:pointer; position:relative;"
    @onclick='() => Nav.NavigateTo($"/tasks/day/{Date.ToString("yyyy-MM-dd")}")'>

    @* Badge in top-right corner *@
    @if (Tasks.Count > 0)
    {
        <MudBadge Color="Color.Default"
                  Content="@Tasks.Count"
                  Style="position:absolute; top:20px; right:20px; z-index:1;" />
    }

    <div class="d-flex justify-space-start align-items-center mb-2">
        <MudText Typo="Typo.subtitle2" Class="m-0">@Date.Day</MudText>
    </div>
    <div style="overflow-y:auto; max-height:100px;">
        @foreach (var task in Tasks.Take(3))
        {
            <TaskChipComponent TaskItem="task" />
        }
        @if (Tasks.Count > 3)
        {
            <MudText Typo="Typo.caption" Align="Align.Center" Class="mt-1 text-secondary">
                +@((Tasks.Count - 3)) more
            </MudText>
        }
    </div>
</td>

@code {
    [Parameter] public DateTimeOffset DateOffset { get; set; }
    [Parameter] public IList<TaskItemLookupDto> Tasks { get; set; } = Array.Empty<TaskItemLookupDto>();
    [Parameter] public DateTime CurrentMonth { get; set; }

    private DateTime Date => DateOffset.DateTime;
    private bool InMonth => Date.Month == CurrentMonth.Month;
    private bool IsToday => Date.Date == DateTime.Today;
}