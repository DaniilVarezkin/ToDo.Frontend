@using ToDo.Shared.Enums
@inherits EditDialogWindowViewModel

<MudDialog>
    <TitleContent>
        @ContentText
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form">
        <MudGrid Spacing="3">
            <!-- Заголовок -->
            <MudItem xs="12">
                <MudTextField T="string"
                              @bind-Value="_model.Title"
                              Label="Заголовок"
                              Required="true"
                              RequiredError="Обязательное поле"
                              Variant="Variant.Outlined"
                              Counter="250"
                              MaxLength="250"
                              Immediate="true"
                              Style="width:100%;" />
            </MudItem>



            <!-- «Весь день» + диапазон дат -->
            <MudItem xs="12" >
                <MudCheckBox T="bool"
                             Color="Color.Primary"
                             Label="Весь день" 
                             ValueChanged="OnIsAllDayChanged"
                             Value="_model.IsAllDay"/>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudDateRangePicker
                    @bind-DateRange="_model.DateRange"
                    Label="Период"
                    Variant="Variant.Outlined"
                    Required="true"
                    RequiredError="Укажите даты"
                    Style="width:100%;" />
            </MudItem>

            @if (!_model.IsAllDay)
            {
                <!-- Время начала / окончания -->
                <MudItem xs="12" sm="3">
                    <MudTimePicker T="TimeSpan?"
                                   Label="Время начала"
                                   Variant="Variant.Outlined"
                                   Required="true"
                                   RequiredError="Укажите время начала"
                                   Style="width:100%;" 
                                   Time="_model.StartTime"
                                   TimeChanged="_model.OnStartTimeChanged"/>
                </MudItem>
                <MudItem xs="12" sm="3">
                    <MudTimePicker T="TimeSpan?"
                                   Label="Время окончания"
                                   Variant="Variant.Outlined"
                                   Required="true"
                                   RequiredError="Укажите время окончания"
                                   Style="width:100%;"
                                   ImmediateText="true"
                                   Time="_model.EndTime"
                                   TimeChanged="_model.OnEndTimeChanged"
                                   Validation="(TimeSpan? time) => ValidateEndTime(time)"/>
                </MudItem>

                <!-- Слайдер длительности -->
                <MudItem xs="12" Class="mx-3 mb-2">
                    <MudText Typo="Typo.body2">
                        Длительность: @_model.DurationLabel
                    </MudText>
                    <MudSlider  T="int"
                                Size="Size.Medium"
                                Min="0" Max="60 * 5" Step="15"
                                TickMarks="true"
                                Class="mt-1" 
                                TickMarkLabels="@_model.DurationMarks"
                                Value="_model.DurationMinutes"
                                ValueChanged="_model.OnDurationMinutesChanged"/>
                </MudItem>
            }
            <MudFlexBreak />
            <MudItem xs="12" sm="4">
                <MudSelect T="UserTaskStatus"
                           @bind-Value="_model.Status"
                           Label="Статус"
                           Variant="Variant.Outlined"
                           Style="width:100%;">
                    @foreach (var s in Enum.GetValues<UserTaskStatus>())
                    {
                        <MudSelectItem Value="@s">@s</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12" sm="4">
                <MudSelect T="TaskPriority"
                           @bind-Value="_model.Priority"
                           Label="Приоритет"
                           Variant="Variant.Outlined"
                           Style="width:100%;">
                    @foreach (var p in Enum.GetValues<TaskPriority>())
                    {
                        <MudSelectItem Value="@p">@p</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12">
                <MudTextField T="string"
                              @bind-Value="_model.Description"
                              Label="Описание"
                              Variant="Variant.Outlined"
                              Lines="3"
                              Immediate="true"
                              MaxLength="1000"
                              Counter="1000"
                              Style="width:100%;" />
            </MudItem>

            <!-- Кнопки -->
            <MudItem xs="12">
                <MudStack Row="true" Justify="Justify.FlexEnd" Spacing="2">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               OnClick="@SubmitAsync">
                        @(Id.HasValue ? "Сохранить" : "Создать")
                    </MudButton>
                    <MudButton Variant="Variant.Outlined"
                               OnClick='Cancel'>
                        Отмена
                    </MudButton>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отмена</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>
